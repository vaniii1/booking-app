services:
  postgresdb:
    platform: linux/arm64
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DATABASE
    ports:
      - $POSTGRES_LOCAL_PORT:$POSTGRES_DOCKER_PORT
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 30s
      retries: 3
  app:
    depends_on:
      - postgresdb
    restart: on-failure
    image: booking-api
    build: .
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
      - $DEBUG_PORT:$DEBUG_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://postgresdb:${POSTGRES_DOCKER_PORT}/${POSTGRES_DATABASE}",
        "spring.datasource.username" : "${POSTGRES_USER}",
        "spring.datasource.password" : "${POSTGRES_PASSWORD}",
        "spring.datasource.driver-class-name" : "org.postgresql.Driver",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "jwt.secret.string" : "${JWT_SECRET_STRING}",
        "stripe.ApiKey" : "${STRIPE_API_KEY}",
        "telegram.bot.token" : "${TELEGRAM_BOT_TOKEN}",
        "telegram.bot.username" : "${TELEGRAM_BOT_USERNAME}",
        "admin.chat.id" : "${ADMIN_CHAT_ID}",
        "server.port" : "4044"
      }'
      JAVA_TOOL_OPTIONS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:${DEBUG_PORT}"
